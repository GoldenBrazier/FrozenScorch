#pragma once
#include <Support/MacOS/KeyCodes.h>

namespace OpenRenderer {

enum KeyCode {
    KEYCODE_UNKNOWN = 0,

    KEYCODE_A = 4,
    KEYCODE_B = 5,
    KEYCODE_C = 6,
    KEYCODE_D = 7,
    KEYCODE_E = 8,
    KEYCODE_F = 9,
    KEYCODE_G = 10,
    KEYCODE_H = 11,
    KEYCODE_I = 12,
    KEYCODE_J = 13,
    KEYCODE_K = 14,
    KEYCODE_L = 15,
    KEYCODE_M = 16,
    KEYCODE_N = 17,
    KEYCODE_O = 18,
    KEYCODE_P = 19,
    KEYCODE_Q = 20,
    KEYCODE_R = 21,
    KEYCODE_S = 22,
    KEYCODE_T = 23,
    KEYCODE_U = 24,
    KEYCODE_V = 25,
    KEYCODE_W = 26,
    KEYCODE_X = 27,
    KEYCODE_Y = 28,
    KEYCODE_Z = 29,

    KEYCODE_1 = 30,
    KEYCODE_2 = 31,
    KEYCODE_3 = 32,
    KEYCODE_4 = 33,
    KEYCODE_5 = 34,
    KEYCODE_6 = 35,
    KEYCODE_7 = 36,
    KEYCODE_8 = 37,
    KEYCODE_9 = 38,
    KEYCODE_0 = 39,

    KEYCODE_RETURN = 40,
    KEYCODE_ESCAPE = 41,
    KEYCODE_BACKSPACE = 42,
    KEYCODE_TAB = 43,
    KEYCODE_SPACE = 44,

    KEYCODE_MINUS = 45,
    KEYCODE_EQUALS = 46,
    KEYCODE_LEFTBRACKET = 47,
    KEYCODE_RIGHTBRACKET = 48,
    KEYCODE_BACKSLASH = 49,
    KEYCODE_NONUSHASH = 50,
    KEYCODE_SEMICOLON = 51,
    KEYCODE_APOSTROPHE = 52,
    KEYCODE_GRAVE = 53,
    KEYCODE_COMMA = 54,
    KEYCODE_PERIOD = 55,
    KEYCODE_SLASH = 56,

    KEYCODE_CAPSLOCK = 57,

    KEYCODE_F1 = 58,
    KEYCODE_F2 = 59,
    KEYCODE_F3 = 60,
    KEYCODE_F4 = 61,
    KEYCODE_F5 = 62,
    KEYCODE_F6 = 63,
    KEYCODE_F7 = 64,
    KEYCODE_F8 = 65,
    KEYCODE_F9 = 66,
    KEYCODE_F10 = 67,
    KEYCODE_F11 = 68,
    KEYCODE_F12 = 69,

    KEYCODE_PRINTSCREEN = 70,
    KEYCODE_SCROLLLOCK = 71,
    KEYCODE_PAUSE = 72,
    KEYCODE_INSERT = 73,
    KEYCODE_HOME = 74,
    KEYCODE_PAGEUP = 75,
    KEYCODE_DELETE = 76,
    KEYCODE_END = 77,
    KEYCODE_PAGEDOWN = 78,
    KEYCODE_RIGHT = 79,
    KEYCODE_LEFT = 80,
    KEYCODE_DOWN = 81,
    KEYCODE_UP = 82,

    KEYCODE_NUMLOCKCLEAR = 83,
    KEYCODE_KP_DIVIDE = 84,
    KEYCODE_KP_MULTIPLY = 85,
    KEYCODE_KP_MINUS = 86,
    KEYCODE_KP_PLUS = 87,
    KEYCODE_KP_ENTER = 88,
    KEYCODE_KP_1 = 89,
    KEYCODE_KP_2 = 90,
    KEYCODE_KP_3 = 91,
    KEYCODE_KP_4 = 92,
    KEYCODE_KP_5 = 93,
    KEYCODE_KP_6 = 94,
    KEYCODE_KP_7 = 95,
    KEYCODE_KP_8 = 96,
    KEYCODE_KP_9 = 97,
    KEYCODE_KP_0 = 98,
    KEYCODE_KP_PERIOD = 99,

    KEYCODE_NONUSBACKSLASH = 100,
    KEYCODE_APPLICATION = 101,
    KEYCODE_POWER = 102,
    KEYCODE_KP_EQUALS = 103,
    KEYCODE_F13 = 104,
    KEYCODE_F14 = 105,
    KEYCODE_F15 = 106,
    KEYCODE_F16 = 107,
    KEYCODE_F17 = 108,
    KEYCODE_F18 = 109,
    KEYCODE_F19 = 110,
    KEYCODE_F20 = 111,
    KEYCODE_F21 = 112,
    KEYCODE_F22 = 113,
    KEYCODE_F23 = 114,
    KEYCODE_F24 = 115,
    KEYCODE_EXECUTE = 116,
    KEYCODE_HELP = 117,
    KEYCODE_MENU = 118,
    KEYCODE_SELECT = 119,
    KEYCODE_STOP = 120,
    KEYCODE_AGAIN = 121,
    KEYCODE_UNDO = 122,
    KEYCODE_CUT = 123,
    KEYCODE_COPY = 124,
    KEYCODE_PASTE = 125,
    KEYCODE_FIND = 126,
    KEYCODE_MUTE = 127,
    KEYCODE_VOLUMEUP = 128,
    KEYCODE_VOLUMEDOWN = 129,
    KEYCODE_KP_COMMA = 133,
    KEYCODE_KP_EQUALSAS400 = 134,

    KEYCODE_ALTERASE = 153,
    KEYCODE_SYSREQ = 154,
    KEYCODE_CANCEL = 155,
    KEYCODE_CLEAR = 156,
    KEYCODE_PRIOR = 157,
    KEYCODE_RETURN2 = 158,
    KEYCODE_SEPARATOR = 159,
    KEYCODE_OUT = 160,
    KEYCODE_OPER = 161,
    KEYCODE_CLEARAGAIN = 162,
    KEYCODE_CRSEL = 163,
    KEYCODE_EXSEL = 164,

    KEYCODE_KP_00 = 176,
    KEYCODE_KP_000 = 177,
    KEYCODE_THOUSANDSSEPARATOR = 178,
    KEYCODE_DECIMALSEPARATOR = 179,
    KEYCODE_CURRENCYUNIT = 180,
    KEYCODE_CURRENCYSUBUNIT = 181,
    KEYCODE_KP_LEFTPAREN = 182,
    KEYCODE_KP_RIGHTPAREN = 183,
    KEYCODE_KP_LEFTBRACE = 184,
    KEYCODE_KP_RIGHTBRACE = 185,
    KEYCODE_KP_TAB = 186,
    KEYCODE_KP_BACKSPACE = 187,
    KEYCODE_KP_A = 188,
    KEYCODE_KP_B = 189,
    KEYCODE_KP_C = 190,
    KEYCODE_KP_D = 191,
    KEYCODE_KP_E = 192,
    KEYCODE_KP_F = 193,
    KEYCODE_KP_XOR = 194,
    KEYCODE_KP_POWER = 195,
    KEYCODE_KP_PERCENT = 196,
    KEYCODE_KP_LESS = 197,
    KEYCODE_KP_GREATER = 198,
    KEYCODE_KP_AMPERSAND = 199,
    KEYCODE_KP_DBLAMPERSAND = 200,
    KEYCODE_KP_VERTICALBAR = 201,
    KEYCODE_KP_DBLVERTICALBAR = 202,
    KEYCODE_KP_COLON = 203,
    KEYCODE_KP_HASH = 204,
    KEYCODE_KP_SPACE = 205,
    KEYCODE_KP_AT = 206,
    KEYCODE_KP_EXCLAM = 207,
    KEYCODE_KP_MEMSTORE = 208,
    KEYCODE_KP_MEMRECALL = 209,
    KEYCODE_KP_MEMCLEAR = 210,
    KEYCODE_KP_MEMADD = 211,
    KEYCODE_KP_MEMSUBTRACT = 212,
    KEYCODE_KP_MEMMULTIPLY = 213,
    KEYCODE_KP_MEMDIVIDE = 214,
    KEYCODE_KP_PLUSMINUS = 215,
    KEYCODE_KP_CLEAR = 216,
    KEYCODE_KP_CLEARENTRY = 217,
    KEYCODE_KP_BINARY = 218,
    KEYCODE_KP_OCTAL = 219,
    KEYCODE_KP_DECIMAL = 220,
    KEYCODE_KP_HEXADECIMAL = 221,

    KEYCODE_LCTRL = 224,
    KEYCODE_LSHIFT = 225,
    KEYCODE_LALT = 226, // alt, option
    KEYCODE_LGUI = 227, // windows, command (apple), meta
    KEYCODE_RCTRL = 228,
    KEYCODE_RSHIFT = 229,
    KEYCODE_RALT = 230, // alt gr, option
    KEYCODE_RGUI = 231, // windows, command (apple), meta

    KEYCODE_MODE = 257,

    KEYCODE_AUDIONEXT = 258,
    KEYCODE_AUDIOPREV = 259,
    KEYCODE_AUDIOSTOP = 260,
    KEYCODE_AUDIOPLAY = 261,
    KEYCODE_AUDIOMUTE = 262,
    KEYCODE_MEDIASELECT = 263,
    KEYCODE_WWW = 264,
    KEYCODE_MAIL = 265,
    KEYCODE_CALCULATOR = 266,
    KEYCODE_COMPUTER = 267,
    KEYCODE_AC_SEARCH = 268,
    KEYCODE_AC_HOME = 269,
    KEYCODE_AC_BACK = 270,
    KEYCODE_AC_FORWARD = 271,
    KEYCODE_AC_STOP = 272,
    KEYCODE_AC_REFRESH = 273,
    KEYCODE_AC_BOOKMARKS = 274,

    KEYCODE_BRIGHTNESSDOWN = 275,
    KEYCODE_BRIGHTNESSUP = 276,
    KEYCODE_DISPLAYSWITCH = 277, // display mirroring/dual display switch, video mode switch
    KEYCODE_KBDILLUMTOGGLE = 278,
    KEYCODE_KBDILLUMDOWN = 279,
    KEYCODE_KBDILLUMUP = 280,
    KEYCODE_EJECT = 281,
    KEYCODE_SLEEP = 282,

    KEYCODE_APP1 = 283,
    KEYCODE_APP2 = 284,

    KEYCODE_AUDIOREWIND = 285,
    KEYCODE_AUDIOFASTFORWARD = 286,

    GENERIC_NUM_SCANCODES = 512
};

// We don't need a special translation for sdl keycodes, since
// Generic::KeyCode and sdl keycodes are based on USB standard.
static inline KeyCode keycode_from_sdl(int scancode)
{
    return (KeyCode)scancode;
}

static KeyCode cocoa_translation[] = {
    [Support::MacOS::KeyCode::KEY_A] = KeyCode::KEYCODE_A,
    [Support::MacOS::KeyCode::KEY_S] = KeyCode::KEYCODE_S,
    [Support::MacOS::KeyCode::KEY_D] = KeyCode::KEYCODE_D,
    [Support::MacOS::KeyCode::KEY_F] = KeyCode::KEYCODE_F,
    [Support::MacOS::KeyCode::KEY_H] = KeyCode::KEYCODE_H,
    [Support::MacOS::KeyCode::KEY_G] = KeyCode::KEYCODE_G,
    [Support::MacOS::KeyCode::KEY_Z] = KeyCode::KEYCODE_Z,
    [Support::MacOS::KeyCode::KEY_X] = KeyCode::KEYCODE_X,
    [Support::MacOS::KeyCode::KEY_C] = KeyCode::KEYCODE_C,
    [Support::MacOS::KeyCode::KEY_V] = KeyCode::KEYCODE_V,
    [Support::MacOS::KeyCode::KEY_B] = KeyCode::KEYCODE_B,
    [Support::MacOS::KeyCode::KEY_Q] = KeyCode::KEYCODE_Q,
    [Support::MacOS::KeyCode::KEY_W] = KeyCode::KEYCODE_W,
    [Support::MacOS::KeyCode::KEY_E] = KeyCode::KEYCODE_E,
    [Support::MacOS::KeyCode::KEY_R] = KeyCode::KEYCODE_R,
    [Support::MacOS::KeyCode::KEY_Y] = KeyCode::KEYCODE_T,
    [Support::MacOS::KeyCode::KEY_T] = KeyCode::KEYCODE_Y,
    [Support::MacOS::KeyCode::KEY_1] = KeyCode::KEYCODE_1,
    [Support::MacOS::KeyCode::KEY_2] = KeyCode::KEYCODE_2,
    [Support::MacOS::KeyCode::KEY_3] = KeyCode::KEYCODE_3,
    [Support::MacOS::KeyCode::KEY_4] = KeyCode::KEYCODE_4,
    [Support::MacOS::KeyCode::KEY_6] = KeyCode::KEYCODE_6,
    [Support::MacOS::KeyCode::KEY_5] = KeyCode::KEYCODE_5,
    [Support::MacOS::KeyCode::KEY_EQUALS] = KeyCode::KEYCODE_EQUALS,
    [Support::MacOS::KeyCode::KEY_9] = KeyCode::KEYCODE_9,
    [Support::MacOS::KeyCode::KEY_7] = KeyCode::KEYCODE_7,
    [Support::MacOS::KeyCode::KEY_MINUS] = KeyCode::KEYCODE_MINUS,
    [Support::MacOS::KeyCode::KEY_8] = KeyCode::KEYCODE_8,
    [Support::MacOS::KeyCode::KEY_0] = KeyCode::KEYCODE_0,
    [Support::MacOS::KeyCode::KEY_RIGHTBRACKET] = KeyCode::KEYCODE_RIGHTBRACKET,
    [Support::MacOS::KeyCode::KEY_O] = KeyCode::KEYCODE_O,
    [Support::MacOS::KeyCode::KEY_U] = KeyCode::KEYCODE_U,
    [Support::MacOS::KeyCode::KEY_LEFTBRACKET] = KeyCode::KEYCODE_LEFTBRACKET,
    [Support::MacOS::KeyCode::KEY_I] = KeyCode::KEYCODE_I,
    [Support::MacOS::KeyCode::KEY_P] = KeyCode::KEYCODE_P,
    [Support::MacOS::KeyCode::KEY_RETURN] = KeyCode::KEYCODE_RETURN,
    [Support::MacOS::KeyCode::KEY_L] = KeyCode::KEYCODE_L,
    [Support::MacOS::KeyCode::KEY_J] = KeyCode::KEYCODE_J,
    [Support::MacOS::KeyCode::KEY_APOSTROPHE] = KeyCode::KEYCODE_APOSTROPHE,
    [Support::MacOS::KeyCode::KEY_K] = KeyCode::KEYCODE_K,
    [Support::MacOS::KeyCode::KEY_SEMICOLON] = KeyCode::KEYCODE_SEMICOLON,
    [Support::MacOS::KeyCode::KEY_FRONTSLASH] = KeyCode::KEYCODE_SLASH,
    [Support::MacOS::KeyCode::KEY_COMMA] = KeyCode::KEYCODE_COMMA,
    [Support::MacOS::KeyCode::KEY_BACKSLASH] = KeyCode::KEYCODE_BACKSLASH,
    [Support::MacOS::KeyCode::KEY_N] = KeyCode::KEYCODE_N,
    [Support::MacOS::KeyCode::KEY_M] = KeyCode::KEYCODE_M,
    [Support::MacOS::KeyCode::KEY_PERIOD] = KeyCode::KEYCODE_PERIOD,
    [Support::MacOS::KeyCode::KEY_TAB] = KeyCode::KEYCODE_TAB,
    [Support::MacOS::KeyCode::KEY_BACKAPOSTROPHE] = KeyCode::KEYCODE_GRAVE,
    [Support::MacOS::KeyCode::KEY_DELETE] = KeyCode::KEYCODE_DELETE,
    [Support::MacOS::KeyCode::KEY_ESCAPE] = KeyCode::KEYCODE_ESCAPE,
    [Support::MacOS::KeyCode::KEY_COMMAND] = KeyCode::KEYCODE_LGUI,
    [Support::MacOS::KeyCode::KEY_SHIFT] = KeyCode::KEYCODE_LSHIFT,
    [Support::MacOS::KeyCode::KEY_CAPSLOCK] = KeyCode::KEYCODE_CAPSLOCK,
    [Support::MacOS::KeyCode::KEY_OPTION] = KeyCode::KEYCODE_LALT,
    [Support::MacOS::KeyCode::KEY_CONTROL] = KeyCode::KEYCODE_LCTRL,
    [Support::MacOS::KeyCode::KEY_UP] = KeyCode::KEYCODE_UP,
    [Support::MacOS::KeyCode::KEY_DOWN] = KeyCode::KEYCODE_DOWN,
    [Support::MacOS::KeyCode::KEY_LEFT] = KeyCode::KEYCODE_LEFT,
    [Support::MacOS::KeyCode::KEY_RIGHT] = KeyCode::KEYCODE_RIGHT
};

static inline KeyCode keycode_from_cocoa(int scancode)
{
    return (KeyCode)cocoa_translation[scancode];
}

}